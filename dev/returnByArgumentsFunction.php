<?php
//
// The scrips prints the list of functions that can initialize variables
// passed as their arguments
//
// See also: get_loaded_extensions(), get_extension_funcs()
//

// exclude list:
// some functions does receive args via references but require that
// they be initialized already.
// really miss distinction between in, out and in-out arguments in PHP,
// passed by reference can be either out or in-out
$exclude_list = array(
        'array_multisort'         => array(0, 1, 2, 3, 4, 5),
        'array_pop'               => array(0),
        'array_push'              => array(0),
        'array_shift'             => array(0),
        'array_splice'            => array(0),
        'array_unshift'           => array(0),
        'array_walk'              => array(0),
        'array_walk_recursive'    => array(0),
        'arsort'                  => array(0),
        'asort'                   => array(0),
        'call_user_method'        => array(1),
        'call_user_method_array'  => array(1),
        'current'                 => array(0),
        'each'                    => array(0),
        'end'                     => array(0),
        'extract'                 => array(0),
        'key'                     => array(0),
        'krsort'                  => array(0),
        'ksort'                   => array(0),
        'mb_convert_variables'    => array(2, 3, 4, 5, 6, 7, 8, 9),
        'natcasesort'             => array(0),
        'natsort'                 => array(0),
        'next'                    => array(0),
        'openssl_csr_new'         => array(1),
        'pos'                     => array(0),
        'prev'                    => array(0),
        'reset'                   => array(0),
        'rsort'                   => array(0),
        'settype'                 => array(0),
        'shuffle'                 => array(0),
        'sort'                    => array(0),
        'uasort'                  => array(0),
        'uksort'                  => array(0),
        'usort'                   => array(0),
        'xml_set_object'          => array(1),
 );

// include list:
// the list of defined functions depends on loaded extensions
// e.g. my box misses apc extenstion/functions
$include_list = array(
    // comment
    "apc_fetch"               => array(1),
    'apc_dec'                 => array(2),
    'apc_inc'                 => array(2),
    'grapheme_extract'        => array(4),
    'ncurses_color_content'   => array(1, 2, 3),
    'ncurses_getmaxyx'        => array(1, 2),
    'ncurses_getmouse'        => array(0),
    'ncurses_getyx'           => array(1, 2),
    'ncurses_instr'           => array(0),
    'ncurses_mouse_trafo'     => array(0, 1),
    'ncurses_mousemask'       => array(1),
    'ncurses_pair_content'    => array(1, 2),
    'ncurses_wmouse_trafo'    => array(1, 2),
    'numfmt_parse'            => array(3),
    'numfmt_parse_currency'   => array(2, 3),
    'pcntl_waitpid'           => array(1),
    "pcntl_wait"              => array(0),
);

$defined_functions = get_defined_functions();
$internal_functions = $defined_functions["internal"];

$refpass_functions = array();
foreach ($internal_functions as $function_name) {
    $r = new ReflectionFunction($function_name);
    $params = $r->getParameters();
    $ref_params = array();
    foreach ($params as $p) {
        if ($p->isPassedByReference()) {
            $pos = $p->getPosition();
            if (!isset($exclude_list[$function_name]) || !in_array($pos, $exclude_list[$function_name])) {
                if ($p->getName() == "...") {
                    // functions like sscanf takes unlimited number of args
                    // TODO: create a better way to work with unlimited lists
                    for ($i = $pos; $i<10; ++$i) {
                        $ref_params[] = $i;
                    }
                } else {
                    $ref_params[] = $pos;
                }

            }
        }
    }
    if (count($ref_params)) {
        $refpass_functions[$function_name] = $ref_params;
    }
}
$refpass_functions = array_merge($refpass_functions, $include_list);

$spaces = "        ";
ksort($refpass_functions);
$script_name = $argv[0];
$version = phpversion();
echo "$spaces//this part was generated by $script_name with php version $version\n";
foreach ($refpass_functions as $name => $params) {
    echo sprintf("%s%-25s => array(%s),\n", $spaces, "'$name'", implode(", ", $params));
}
echo "$spaces//end of generated code\n";

